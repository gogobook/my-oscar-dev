version: '3.5'
services:
  # starlette:
  #   build: ./starlette
  #   depends_on:
  #     - web
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./starlette:/usr/src/app
  #   command: sh -c "gunicorn -w 2 --bind=0.0.0.0 -k uvicorn.workers.UvicornWorker --log-level info app:app"
    # command: python app.py

  sandbox:
    build: ./sandbox
    # depends_on:
    #   - db
    ports:
      - "8080:8080"
    volumes:
      - ./.run:/var/run/
      - ./sandbox:/usr/src/app
    # command: sh -c "gunicorn -w 2 --bind=0.0.0.0 -k uvicorn.workers.UvicornWorker --log-level info app:app"
    command: sh -c "python manage.py runserver 8080"

  # db:
  #   image: postgres:12-alpine
  #   # ports:
  #   #   - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=postgres
  #     - POSTGRES_USER=odoo
  #     - POSTGRES_PASSWORD=myodoo
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./pgdata:/var/lib/postgresql/data/pgdata
  #     - ./.run/postgresql:/var/run/postgresql

  # redis:
  #   image: redis:latest
  #   # container_name: redis
  #   sysctls:
  #     - net.core.somaxconn=1024

  #   volumes:
  #     - ./redisdata:/data
  #     - ./redis.conf:/usr/local/etc/redis/redis.conf
  #     - ./.run/redis:/var/run/redis
  #   command: bash -c "redis-server /usr/local/etc/redis/redis.conf"

  # nginx:
  #   image: nginx
  #   labels:
  #       com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./web/static:/var/www/app/static        # 這裡把web (也就是django)的static files放在nginx中。
  #     - ./web/media:/var/www/app/media          # 同樣的，把media也放在nginx中。
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./.run/gunicorn:/var/run/gunicorn
  #     - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx/html:/usr/share/nginx/html # html 內放置let's encrypt 的驗證碼及google search console 的驗證碼。
  #     # - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
  #     - ./nginx_data/certbot/conf:/etc/letsencrypt
  #     - ./nginx_data/certbot/www:/var/www/certbot
  #     # - ./nginx_data/nginx:/etc/nginx/conf.d

  #   # logging:
  #   #   driver: none
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx_data/certbot/conf:/etc/letsencrypt
  #     - ./nginx_data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
